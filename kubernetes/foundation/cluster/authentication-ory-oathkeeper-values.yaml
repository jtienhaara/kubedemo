#
# Configured according to:
#
#     https://k8s.ory.sh/helm/oathkeeper.html
#     https://www.ory.sh/docs/oathkeeper/reference/configuration
#
# Apache 2.0 license:
#
#     https://github.com/ory/k8s/blob/v0.39.1/LICENSE
#
# Original values.yaml:
#
#     # https://github.com/ory/k8s/blob/v0.39.1/helm/charts/oathkeeper/values.yaml

#
# Changes made to the original:
#
# - Removed unwanted blocks.
# - Changed access-rules file source from /etc/rules/access-rules.json
#   to /etc/rules/kubedemo/access-rules.yaml, to mount via ConfigMap.
#   (See also authentication-ory-oathkeeper-configmap.yaml.)
# - Added volumes and volumeMounts to use the access-rules ConfigMap
#   for /etc/rules/kubedemo/access-rules.yaml.
# - Note: until later, we enable anonymous access to all VirtualServices:
#   https://www.ory.sh/docs/oathkeeper/pipeline/authn#anonymous
#
## -- Mode for oathkeeper controller: possible modes are: controller or sidecar
global:
  ory:
    oathkeeper:
      maester:
        mode: controller

# -- Number of ORY Oathkeeper members
replicaCount: 1
# -- Number of revisions kept in history
revisionHistoryLimit: 5
## -- Image configuration
image:
  # -- ORY Oathkeeper image
  repository: oryd/oathkeeper
  # -- ORY Oathkeeper version
  tag: "v0.40.6"
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- use a busybox image from another repository
  initContainer:
    repository: busybox
    tag: 1

# -- Pod priority
# https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: ""

## -- Container level security context
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  allowPrivilegeEscalation: false
  privileged: false
  seccompProfile:
    type: RuntimeDefault
  seLinuxOptions:
    level: "s0:c123,c456"

## -- Pod level security context
podSecurityContext:
  fsGroupChangePolicy: "OnRootMismatch"
  runAsNonRoot: true
  runAsUser: 65534
  fsGroup: 65534
  runAsGroup: 65534
  seccompProfile:
    type: RuntimeDefault

## -- Configures the Kubernetes service
service:
  # -- Configures the Kubernetes service for the proxy port.
  proxy:
    # -- En-/disable the service
    enabled: true
    # -- The service type
    type: ClusterIP
    # -- The load balancer IP
    loadBalancerIP: ""
    # -- The service port
    port: 4455
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    annotations: {}
    # -- If you do want to specify additional labels, uncomment the following lines, adjust them as necessary, and remove the curly braces after 'labels:'.
    # e.g.  app: oathkeeper
    labels: {}

  # -- Configures the Kubernetes service for the api port.
  api:
    # -- En-/disable the service
    enabled: true
    # -- The service type
    type: ClusterIP
    # -- The load balancer IP
    loadBalancerIP: ""
    # -- The service port
    port: 4456
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    annotations: {}
    # -- If you do want to specify additional labels, uncomment the following lines, adjust them as necessary, and remove the curly braces after 'labels:'.
    # e.g.  app: oathkeeper
    labels: {}

  # -- Configures the Kubernetes service for the metrics port.
  metrics:
    # -- En-/disable the service
    enabled: true
    # -- The service type
    type: ClusterIP
    # -- Load balancer IP
    loadBalancerIP: ""
    # -- The service port
    port: 80
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    annotations: {}
    # -- If you do want to specify additional labels, uncomment the following lines, adjust them as necessary, and remove the curly braces after 'labels:'.
    # e.g.  app: oathkeeper
    labels: {}

## -- Configure ORY Oathkeeper itself
oathkeeper:
  # -- The ORY Oathkeeper configuration. For a full list of available settings, check:
  #   https://github.com/ory/oathkeeper/blob/master/docs/config.yaml
  config:
    access_rules:
      repositories:
        #
        # Mounted from the "access-rules" ConfigMap:
        #
        - file:///etc/rules/kubedemo/access-rules.yaml
      matching_strategy: regexp
    authenticators:
      #
      # We'll disable anonymous access later...
      #
      anonymous:
        enabled: true
    authorizers:
      allow:
        enabled: true
    mutators:
      id_token:
        enabled: true
        config:
          issuer_url: http://oathkeeper-api.auth:4456
          jwks_url: file:///etc/jwks/jwks.json
          ttl: 1h
    serve:
      proxy:
        port: 4455
      api:
        port: 4456
      prometheus:
        port: 9000
  # -- If set, uses the given JSON Web Key Set as the signing key for the ID Token Mutator.
  mutatorIdTokenJWKs: ""
  # -- If set, uses the given access rules.
  accessRules: ""

  # -- If you enable maester, the following value should be set to "false" to avoid overwriting
  # the rules generated by the CDRs. Additionally, the value "accessRules" shouldn't be
  # used as it will have no effect once "managedAccessRules" is disabled.
  managedAccessRules: true

## -- Secret management
secret:
  # -- switch to false to prevent creating the secret
  enabled: true
  # -- Provide custom name of existing secret, or custom name of secret to be created
  nameOverride: ""
  # nameOverride: "myCustomSecret"
  # -- Annotations to be added to secret. Annotations are added only when secret is being created. Existing secret will not be modified.
  secretAnnotations:
    # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
    # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/resource-policy: "keep"

  # -- default mount path for the kubernetes secret
  mountPath: /etc/secrets
  # -- default filename of JWKS (mounted as secret)
  filename: mutator.id_token.jwks.json
  # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
  hashSumEnabled: true

## -- Deployment specific config
deployment:
  strategy:
    type: RollingUpdate
    rollingUpdate: {}

  resources: {}
  #  We usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. This also increases chances charts run on environments with little
  #  resources, such as Minikube. If you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
  #    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 64Mi

  lifecycle: {}
  # -- Configure the livenessProbe parameters
  livenessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
    failureThreshold: 5
  # -- Configure the readinessProbe parameters
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
    failureThreshold: 5
  # -- Configure the startupProbe parameters
  startupProbe:
    failureThreshold: 60
    successThreshold: 1
    periodSeconds: 1
    timeoutSeconds: 1

  # -- Configure a custom livenessProbe. This overwrites the default object
  customLivenessProbe: {}
  # -- Configure a custom readinessProbe. This overwrites the default object
  customReadinessProbe: {}
  # -- Configure a custom startupProbe. This overwrites the default object
  customStartupProbe: {}

  # -- Specify the serviceAccountName value.
  # In some situations it is needed to provides specific permissions to Hydra deployments
  # Like for example installing Hydra on a cluster with a PosSecurityPolicy and Istio.
  # Uncoment if it is needed to provide a ServiceAccount for the Hydra deployment.**
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: "ory-oathkeeper"

  # https://github.com/kubernetes/kubernetes/issues/57601
  automountServiceAccountToken: false

  terminationGracePeriodSeconds: 60

  # -- Node labels for pod assignment.
  nodeSelector: {}
  # If you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #   foo: bar

  extraEnv: []

  # -- Array of extra arguments to be passed down to the Deployment. Kubernetes args format is expected
  extraArgs: []

  # -- Extra volumes you can attach to the pod.
  extraVolumes:
    - name: access-rules
      configMap:
        name: access-rules
    - name: jwks
      emptyDir: {}

  # -- Extra volume mounts, allows mounting the extraVolumes to the container.
  extraVolumeMounts:
    - name: access-rules
      mountPath: /etc/rules/kubedemo/
      readOnly: true
    - name: jwks
      mountPath: /etc/jwks/
      readOnly: true

  # -- If you want to add extra sidecar containers.
  extraContainers: ""
  # extraContainers: |
  #  - name: ...
  #    image: ...

  # -- If you want to add extra init containers.
  extraInitContainers: |
    - name: "jwt-generate"
      image: "oryd/oathkeeper:v0.40.6"
      command: [ "sh", "-c", "echo 'Generating /etc/jwks/jwks.json:'; oathkeeper credentials generate --alg RS256 --bits 4096 > /etc/jwks/jwks.json && echo 'Success generating /etc/jwks/jwks.json'" ]
      volumeMounts:
        - name: jwks
          mountPath: /etc/jwks/
          readOnly: false

  # extraInitContainers: |
  #  - name: ...
  #    image: ...

  # -- Configure node tolerations.
  tolerations: []

  # -- Configure pod topologySpreadConstraints.
  topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: oathkeeper
  #       app.kubernetes.io/instance: oathkeeper

  # -- Configure pod dnsConfig.
  dnsConfig: {}
  #   options:
  #     - name: "ndots"
  #       value: "1"

  labels: {}
  #      If you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

  annotations: {}
  #      If you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"

  # -- Specify pod metadata, this metadata is added directly to the pod, and not higher objects
  podMetadata:
    # -- Extra pod level labels
    labels: {}
    # -- Extra pod level annotations
    annotations: {}

  # -- Configure horizontal pod autoscaler for deployment
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPU: {}
    #   type: Utilization
    #   averageUtilization: 80
    targetMemory: {}
    #   type: Utilization
    #   averageUtilization: 80

# -- Configure node affinity
affinity: {}

## -- Configures controller setup
maester:
  enabled: true

## -- PodDistributionBudget configuration
pdb:
  enabled: false
  spec:
    minAvailable: ""
    maxUnavailable: ""

## -- Parameters for the Prometheus ServiceMonitor objects.
# Reference: https://docs.openshift.com/container-platform/4.6/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html
serviceMonitor:
  # -- HTTP scheme to use for scraping.
  scheme: http
  # -- Interval at which metrics should be scraped
  scrapeInterval: 60s
  # -- Timeout after which the scrape is ended
  scrapeTimeout: 30s
  # -- Provide additional metricRelabelings to apply to samples before ingestion.
  metricRelabelings: []
  # -- Provide additional relabelings to apply to samples before scraping
  relabelings: []
  # -- Provide additional labels to the ServiceMonitor resource metadata
  labels: {}
  # -- TLS configuration to use when scraping the endpoint
  tlsConfig: {}
  # -- Additional metric labels
  targetLabels: []

configmap:
  # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
  hashSumEnabled: true

test:
  # -- Provide additional labels to the test pod
  labels: {}
  # -- use a busybox image from another repository
  busybox:
    repository: busybox
    tag: 1
