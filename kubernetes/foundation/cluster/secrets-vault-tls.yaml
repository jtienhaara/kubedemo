#
# Request a certificate from cert-manager, signed by our kubedemo root CA,
# for each Vault Pod's TLS handshaking: vault-0.vault-internal,
# vault-1.vault-internal and vault-2.vault-internal.
# ("vault-internal" is the headless service that exposes each Pod's
# hostname via DNS.  All 3 "vault-0" etc Pods are accessible via the
# headless service inside the "vault" namespace in the cluster, e.g.
# vault-0.vault-internal.svc.cluster.local in kind; but each one
# resolves addresses inside the vault namespace, so we can just set up certs
# and URLs using vault-0.vault-internal etc.)
#
# !!! Unfortunately Vault insists on using DNS, not /etc/resolv.conf,
# to lookup addresses while unsealing; and if we rely only on 127.0.0.1
# to unseal then we get bizarre raft leader failures (vault-2 becomes leader
# even though vault-0 is the only pod that has been unsealed).
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-0-tls
  namespace: vault
spec:
  secretName: vault-0-tls
  duration: 2160h  # 90 days - fine for our kubedemo.
  renewBefore: 360h  # 15 days - fine for our kubedemo.
  subject:
    organizations:
      - vault
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  # commonName: vault-0.vault-internal
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  # Vault requires 127.0.0.1 to unseal, because, by default, the environment
  # variable VAULT_ADDR is populated as https://127.0.0.1:8200.
  dnsNames:
    - vault-0.vault-internal
    - vault-0.vault-internal.vault.svc.cluster.local
  ipAddresses:
    - 127.0.0.1
  issuerRef:
    name: kubedemo-issuer
    kind: ClusterIssuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-1-tls
  namespace: vault
spec:
  secretName: vault-1-tls
  duration: 2160h  # 90 days - fine for our kubedemo.
  renewBefore: 360h  # 15 days - fine for our kubedemo.
  subject:
    organizations:
      - vault
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  # commonName: vault-1.vault-internal
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  # Vault requires 127.0.0.1 to unseal, because, by default, the environment
  # variable VAULT_ADDR is populated as https://127.0.0.1:8200.
  dnsNames:
    - vault-1.vault-internal
    - vault-1.vault-internal.vault.svc.cluster.local
  ipAddresses:
    - 127.0.0.1
  issuerRef:
    name: kubedemo-issuer
    kind: ClusterIssuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-2-tls
  namespace: vault
spec:
  secretName: vault-2-tls
  duration: 2160h  # 90 days - fine for our kubedemo.
  renewBefore: 360h  # 15 days - fine for our kubedemo.
  subject:
    organizations:
      - vault
  # The use of the common name field has been deprecated since 2000 and is
  # discouraged from being used.
  # commonName: vault-2.vault-internal
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  # Vault requires 127.0.0.1 to unseal, because, by default, the environment
  # variable VAULT_ADDR is populated as https://127.0.0.1:8200.
  dnsNames:
    - vault-2.vault-internal
    - vault-2.vault-internal.vault.svc.cluster.local
  ipAddresses:
    - 127.0.0.1
  issuerRef:
    name: kubedemo-issuer
    kind: ClusterIssuer
